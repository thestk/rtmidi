name: C/C++ CI

on: [push, pull_request]

jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - api: jack
            APIcmake: JACK
            deps: libjack-dev
          - api: alsa
            APIcmake: ALSA
            deps: libasound-dev
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: install dependencies
      run:
        sudo apt-get update
        && sudo apt-get install g++-8 autoconf-archive cmake ${{matrix.deps}}
    - name: automake
      run:
        env NOCONFIGURE=1 ./autogen.sh && mkdir bld-automake && cd bld-automake
        && (../configure --with-${{matrix.api}} || (cat config.log; false))
        && make V=1 && make check
    - name: CMake
      run:
        mkdir bld-cmake && cd bld-cmake
        && cmake .. -DRTMIDI_API_JACK=OFF -DRTMIDI_API_ALSA=OFF -DRTMIDI_API_${{matrix.APIcmake}}=ON
        && make VERBOSE=1

  MacOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: install dependencies
      run: brew install autoconf-archive automake cmake meson
    - name: automake
      run:
        env NOCONFIGURE=1 ./autogen.sh && mkdir bld-automake && cd bld-automake
        && (../configure || (cat config.log; false))
        && make V=1 && make check
    - name: CMake
      run: mkdir bld-cmake && cd bld-cmake && cmake .. && make VERBOSE=1

  MinGW:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - host: i686-w64-mingw32
            api: winmm
          - host: x86_64-w64-mingw32
            api: winmm
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: install dependencies
      run:
        sudo apt-get update
        && sudo apt-get install g++-mingw-w64 autoconf-archive
    - name: automake
      run:
        env NOCONFIGURE=1 ./autogen.sh
        && mkdir bld-automake && cd bld-automake
        && (../configure --host=${{matrix.host}} --with-${{matrix.api}} CPPFLAGS=${{matrix.cppflags}} || (cat config.log; false))
        && make V=1
